load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "go_default_library",
    srcs = [
        "allocator.go",
        "allocator_mock.go",
        "allocator_simple.go",
        "allocator_simple_ring.go",
        "app.go",
        "app_cluster.go",
        "app_config.go",
        "app_device.go",
        "app_middleware.go",
        "app_node.go",
        "app_volume.go",
        "brick_create.go",
        "brick_entry.go",
        "cluster_entry.go",
        "dbentry.go",
        "device_entry.go",
        "entry.go",
        "errors.go",
        "limits.go",
        "node_entry.go",
        "testapp_mock.go",
        "volume_durability.go",
        "volume_durability_ec.go",
        "volume_durability_none.go",
        "volume_durability_replica.go",
        "volume_entry.go",
        "volume_entry_allocate.go",
        "volume_entry_create.go",
    ],
    importpath = "github.com/heketi/heketi/apps/glusterfs",
    visibility = ["//visibility:public"],
    deps = [
        "//vendor/github.com/boltdb/bolt:go_default_library",
        "//vendor/github.com/dgrijalva/jwt-go:go_default_library",
        "//vendor/github.com/gorilla/context:go_default_library",
        "//vendor/github.com/gorilla/mux:go_default_library",
        "//vendor/github.com/heketi/heketi/executors:go_default_library",
        "//vendor/github.com/heketi/heketi/executors/kubeexec:go_default_library",
        "//vendor/github.com/heketi/heketi/executors/mockexec:go_default_library",
        "//vendor/github.com/heketi/heketi/executors/sshexec:go_default_library",
        "//vendor/github.com/heketi/heketi/pkg/db:go_default_library",
        "//vendor/github.com/heketi/heketi/pkg/glusterfs/api:go_default_library",
        "//vendor/github.com/heketi/heketi/pkg/kubernetes:go_default_library",
        "//vendor/github.com/heketi/heketi/pkg/utils:go_default_library",
        "//vendor/github.com/heketi/rest:go_default_library",
        "//vendor/github.com/lpabon/godbc:go_default_library",
        "//vendor/github.com/urfave/negroni:go_default_library",
    ],
)

go_test(
    name = "go_default_test",
    srcs = [
        "allocator_simple_ring_test.go",
        "allocator_simple_test.go",
        "app_cluster_test.go",
        "app_device_test.go",
        "app_middleware_test.go",
        "app_node_test.go",
        "app_test.go",
        "app_volume_test.go",
        "brick_entry_test.go",
        "cluster_entry_test.go",
        "dbentry_test.go",
        "device_entry_test.go",
        "entry_test.go",
        "node_entry_test.go",
        "volume_durability_test.go",
        "volume_entry_test.go",
    ],
    importpath = "github.com/heketi/heketi/apps/glusterfs",
    deps = [
        "//vendor/github.com/boltdb/bolt:go_default_library",
        "//vendor/github.com/gorilla/mux:go_default_library",
        "//vendor/github.com/heketi/heketi/client/api/go-client:go_default_library",
        "//vendor/github.com/heketi/heketi/executors:go_default_library",
        "//vendor/github.com/heketi/heketi/pkg/db:go_default_library",
        "//vendor/github.com/heketi/heketi/pkg/glusterfs/api:go_default_library",
        "//vendor/github.com/heketi/heketi/pkg/utils:go_default_library",
        "//vendor/github.com/heketi/tests:go_default_library",
    ],
)

filegroup(
    name = "package-srcs",
    srcs = glob(["**"]),
    tags = ["automanaged"],
    visibility = ["//visibility:private"],
)

filegroup(
    name = "all-srcs",
    srcs = [":package-srcs"],
    tags = ["automanaged"],
    visibility = ["//visibility:public"],
)
